/*
    We start with a good ol' reset.
    That's the one by Eric Meyer http://meyerweb.com/eric/tools/css/reset/

    You can probably argue if it is needed here, or not, but for sure it
    doesn't do any harm and gives us a fresh start.
*/

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
    margin: 0;
    padding: 0;
    border: 0;
    font-size: 100%;
    font: inherit;
    vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
    display: block;
}

body {
    line-height: 1;
}

ol, ul {
    list-style: none;
}

blockquote, q {
    quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
    content: '';
    content: none;
}

table {
    border-collapse: collapse;
    border-spacing: 0;
}

/*
    .,*^'  FROM THE DARK, INTO THE LIGHT  `^*,.
    (overall presentation)
*/
body {
    font-family: 'PT Sans', sans-serif;
    min-height: 740px;

    background: rgb(0, 0, 0);
    color: rgb(255, 255, 255);

    /*background: -moz-radial-gradient(center, ellipse cover,  rgba(0,0,0,1) 0%, rgba(0,0,0,1) 52%, rgba(0,0,0,0.5) 100%); *//* FF3.6+ */
    /*background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop(0%,rgba(0,0,0,1)), color-stop(52%,rgba(0,0,0,1)), color-stop(100%,rgba(0,0,0,0.5))); *//* Chrome,Safari4+ */
    /*background: -webkit-radial-gradient(center, ellipse cover,  rgba(0,0,0,1) 0%,rgba(0,0,0,1) 52%,rgba(0,0,0,0.5) 100%); *//* Chrome10+,Safari5.1+ */
    /*background: -o-radial-gradient(center, ellipse cover,  rgba(0,0,0,1) 0%,rgba(0,0,0,1) 52%,rgba(0,0,0,0.5) 100%); *//* Opera 12+ */
    /*background: -ms-radial-gradient(center, ellipse cover,  rgba(0,0,0,1) 0%,rgba(0,0,0,1) 52%,rgba(0,0,0,0.5) 100%); *//* IE10+ */
    /*background: radial-gradient(ellipse at center,  rgba(0,0,0,1) 0%,rgba(0,0,0,1) 52%,rgba(0,0,0,0.5) 100%); *//* W3C */
    /*filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#000000', endColorstr='#80000000',GradientType=1 ); *//* IE6-9 fallback on horizontal gradient */
}

/*
    Now let's bring some text styles back ...
*/
b, strong {
    font-weight: bold
}

i, em {
    font-style: italic
}

/*
    ... and give links a nice look.
*/
a {
    color: inherit;
    text-decoration: none;
    padding: 0 0.1em;
    background: rgba(255, 255, 255, 0.5);
    text-shadow: -1px -1px 2px rgba(100, 100, 100, 0.9);
    border-radius: 0.2em;

    -webkit-transition: 0.5s;
    -moz-transition: 0.5s;
    -ms-transition: 0.5s;
    -o-transition: 0.5s;
    transition: 0.5s;
}

a:hover,
a:focus {
    background: rgba(255, 255, 255, 1);
    text-shadow: -1px -1px 2px rgba(100, 100, 100, 0.5);
}

/*
    Because the main point behind the impress.js demo is to demo impress.js
    we display a fallback message for users with browsers that don't support
    all the features required by it.

    All of the content will be still fully accessible for them, but I want
    them to know that they are missing something - that's what the demo is
    about, isn't it?

    And then we hide the message, when support is detected in the browser.
*/

.fallback-message {
    font-family: sans-serif;
    line-height: 1.3;

    width: 780px;
    padding: 10px 10px 0;
    margin: 20px auto;

    border: 1px solid #E4C652;
    border-radius: 10px;
    background: #EEDC94;
}

.fallback-message p {
    margin-bottom: 10px;
}

.impress-supported .fallback-message {
    display: none;
}

/*
    .,*^'  It's not the CSS we need, it's the CSS we deserve  `^*,.
    (step & transitions)
*/

.step {
    position: relative;
    width: 900px;
    padding: 40px;
    margin: 20px auto;

    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    -ms-box-sizing: border-box;
    -o-box-sizing: border-box;
    box-sizing: border-box;

    font-family: 'PT Serif', georgia, serif;
    font-size: 48px;
    line-height: 1.5;
}

/*
    ... and we enhance the styles for impress.js.

    Basically we remove the margin and make inactive steps a little bit transparent.
*/
.impress-enabled .step {
    margin: 0;
    opacity: 0.3;

    -webkit-transition: opacity 1s;
    -moz-transition: opacity 1s;
    -ms-transition: opacity 1s;
    -o-transition: opacity 1s;
    transition: opacity 1s;
}

.impress-enabled .step.active {
    opacity: 1
}

/*
    These 'slide' step styles were heavily inspired by HTML5 Slides:
    http://html5slides.googlecode.com/svn/trunk/styles.css

    ;)

    They cover everything what you see on first three steps of the demo.
*/
.slide {
    display: block;

    width: 900px;
    height: 700px;
    padding: 40px 60px;

    background-color: white;
    border: 1px solid rgba(0, 0, 0, .3);
    border-radius: 10px;
    box-shadow: 0 2px 6px rgba(0, 0, 0, .1);

    color: rgb(102, 102, 102);
    text-shadow: 0 2px 2px rgba(0, 0, 0, .1);

    font-family: 'Open Sans', Arial, sans-serif;
    font-size: 30px;
    line-height: 36px;
    letter-spacing: -1px;
}

.slide q {
    display: block;
    font-size: 50px;
    line-height: 72px;

    margin-top: 100px;
}

.slide q strong {
    white-space: nowrap;
}

/*
    .,*^'  It's not the CSS we need, it's the CSS we deserve  `^*,.
    (slides)
*/

#title {
    padding: 0;
}

#title h1 {
    font-size: 42px;
}

#title h2 {
    font-size: 36px;
}

#title img {
    width: 125px;
    float: right;
}

.codeSlide h2 {
    font-size: 20px;
}

#its1995 {
    width: 750px;
    height: 422px;
    background-image: url('../img/raining.gif');
    background-size: 100% auto;
}

#its1995 pre {
    margin-top: 200px;
    font-family: monospace;
}

.blink {
    -webkit-animation: blink 1s steps(5, start) infinite;
    -moz-animation: blink 1s steps(5, start) infinite;
    -ms-animation: blink 1s steps(5, start) infinite;
    -o-animation: blink 1s steps(5, start) infinite;
    animation: blink 1s steps(5, start) infinite;
}

@keyframes blink {
    0% {
        color: white;
    }
    100% {
        color: black;
    }
}

@-webkit-keyframes blink {
    0% {
        color: white;
    }
    100% {
        color: black;
    }
}

#its1964 h1 {
    background: url('../img/Michelle_Obama.jpg') no-repeat top right;
    background-size: 50% 250%;
    font-size: 150px;
}

#java .container {
    width: 700px;
    height: 704px;
    display: block;
    position: relative;
    overflow: hidden;
    margin: 10px 0 0 10px;
}
#java .image {
    width: 700px;
    height: 704px;
    display: block;
    position: absolute;
    left: 0px;
    top: 0px;
}
#java .start {
    -webkit-animation: goslingFadeOut 5s linear 3s;
    -moz-animation: goslingFadeOut 5s linear 3s;
    -ms-animation: goslingFadeOut 5s linear 3s;
    -o-animation: goslingFadeOut 5s linear 3s;
    animation: goslingFadeOut 5s linear 3s;
    -webkit-animation-fill-mode: forwards;
    -animation-fill-mode: forwards;

    background: url("../img/ryan-gosling-beard-normal1.jpg");
    filter: alpha(opacity=100);
    opacity: 1;
}
#java .end {
    -webkit-animation: goslingFadeIn 5s linear 3s;
    -moz-animation: goslingFadeIn 5s linear 3s;
    -ms-animation: goslingFadeIn 5s linear 3s;
    -o-animation: goslingFadeIn 5s linear 3s;
    animation: goslingFadeIn 5s linear 3s;
    -webkit-animation-fill-mode: forwards;
    -animation-fill-mode: forwards;

    background: url("../img/James_Gosling_2008.jpg");
    filter: alpha(opacity=0);
    opacity: 0;
}

@keyframes goslingFadeIn {
    0% {
        opacity:0;
    }
    100% {
        opacity:1;
    }
}
@keyframes goslingFadeOut {
    0% {
        opacity:1;
    }
    100% {
        opacity:0;
    }
}
@-webkit-keyframes goslingFadeIn {
    0% {
        opacity:0;
    }
    100% {
        opacity:1;
    }
}
@-webkit-keyframes goslingFadeOut {
    0% {
        opacity:1;
    }
    100% {
        opacity:0;
    }
}

#java-lols h2 {
    font-size:24px;
}

#weirdo h1 {
    float: left;
    clear: none;
    margin-top:100px;
}
#weirdo img {
    float: right;
}

#incubation tr, th, td {
    font-weight:bold;
    padding: 10px;
}
#incubation td {
    font-weight:normal;
}
#incubation th:last-of-type {
    padding-left:200px;
}
#incubation td:last-of-type {
    padding-left:200px;
}

.fullbg {
    width:820px;
    height:600px;
    text-align:center;
}
#inception .drop {
    background-color:rgba(54, 25, 25, .5);
    padding:10px;
}


#overview {
    filter: alpha(opacity=0);
    opacity: 0;
}
#overview.fadeIn {
    -webkit-animation: goslingFadeIn 1s linear 0s;
    -moz-animation: goslingFadeIn 1s linear 0s;
    -ms-animation: goslingFadeIn 1s linear 0s;
    -o-animation: goslingFadeIn 1s linear 0s;
    animation: goslingFadeIn 1s linear 0s;
    -webkit-animation-fill-mode: forwards;
    -animation-fill-mode: forwards;
}


/*
    And as the last thing there is a workaround for quite strange bug.
    It happens a lot in Chrome. I don't remember if I've seen it in Firefox.

    Sometimes the element positioned in 3D (especially when it's moved back
    along Z axis) is not clickable, because it falls 'behind' the <body>
    element.

    To prevent this, I decided to make <body> non clickable by setting
    pointer-events property to `none` value.
    Value if this property is inherited, so to make everything else clickable
    I bring it back on the #impress element.

    If you want to know more about `pointer-events` here are some docs:
    https://developer.mozilla.org/en/CSS/pointer-events

    There is one very important thing to notice about this workaround - it makes
    everything 'unclickable' except what's in #impress element.

    So use it wisely ... or don't use at all.
*/
.impress-enabled {
    pointer-events: none
}

.impress-enabled #impress {
    pointer-events: auto
}

/*
    There is one funny thing I just realized.

    Thanks to this workaround above everything except #impress element is invisible
    for click events. That means that the hint element is also not clickable.
    So basically all of this transforms and delayed transitions trickery was probably
    not needed at all...

    But it was fun to learn about it, wasn't it?
*/

/*
    That's all I have for you in this file.
    Thanks for reading. I hope you enjoyed it at least as much as I enjoyed writing it
    for you.
*/
